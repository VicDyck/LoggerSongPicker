{"version":3,"sources":["data/songs.js","components/diceBox.js","components/Songs.js","App.js","index.js"],"names":["dataSongs","song01","num","name","singer","played","song02","song03","song04","song05","song06","song07","song08","song09","song10","song11","song12","song13","song14","song15","song16","song17","Dice","DiceBox","id","assetPath","startingHeight","throwForce","spinForce","lightIntensity","Songs","props","onChange","songs","onRoll","updateSong","e","preventDefault","val","target","value","parseInt","song","replace","newState","className","onClick","Object","entries","map","key","values","App","useState","setSong","pendingRoll","setPendingRoll","onRollComplete","results","console","log","keys","forEach","i","total","notation","group","show","roll","init","then","document","addEventListener","diceBoxCanvas","getElementById","window","getComputedStyle","display","hide","clear","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.283f0bb7.chunk.js","sourcesContent":["const dataSongs = {\r\n    song01: {\r\n        num: 1,\r\n        name: \"Karma Police - Folson Prison\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song02: {\r\n        num: 2,\r\n        name: \"Tilsonburg\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song03: {\r\n        num: 3,\r\n        name: \"Good As Hell\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song04: {\r\n        num: 4,\r\n        name: \"Dig It Down\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song05: {\r\n        num: 5,\r\n        name: \"Don't Let the Door Hit Ya\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song06: {\r\n        num: 6,\r\n        name: \"Shotgun\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song07: {\r\n        num: 7,\r\n        name: \"Still Drunk from the Night Before\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song08: {\r\n        num: 8,\r\n        name: \"Float On\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song09: {\r\n        num: 9,\r\n        name: \"North of Dewdney\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song10: {\r\n        num: 10,\r\n        name: \"Caravan\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song11: {\r\n        num: 11,\r\n        name: \"Arrested\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song12: {\r\n        num: 12,\r\n        name: \"Taking the Treeline Down\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song13: {\r\n        num: 13,\r\n        name: \"Boneshaker\",\r\n        singer: \"Adam\",\r\n        played: 0\r\n    },\r\n    song14: {\r\n        num: 14,\r\n        name: \"Three Little Birds\",\r\n        singer: \"Other\",\r\n        played: 0\r\n    },\r\n    song15: {\r\n        num: 15,\r\n        name: \"Family Tradition\",\r\n        singer: \"Other\",\r\n        played: 0\r\n    },\r\n    song16: {\r\n        num: 16,\r\n        name: \"Feeling Groovy\",\r\n        singer: \"Other\",\r\n        played: 0\r\n    },\r\n    song17: {\r\n        num: 17,\r\n        name: \"Log Driver's Waltz\",\r\n        singer: \"Other\",\r\n        played: 0\r\n    }\r\n};\r\n\r\nexport { dataSongs };\r\n","import DiceBox from \"@3d-dice/dice-box\";\n\n/*  --------------- DICE BOX -------------- */\n// Note the dice-box assets in the public folder.\n// Those files are all necessary for the web workers to function properly\n// create new DiceBox class\nconst Dice = new DiceBox(\n  \"#dice-box\", // target DOM element to inject the canvas for rendering\n  {\n    id: \"dice-canvas\", // canvas element id\n    assetPath: \"/assets/dice-box/\",\n    startingHeight: 8,\n    throwForce: 6,\n    spinForce: 5,\n    lightIntensity: 0.9\n  }\n);\n\nexport { Dice };\n","import \"./Songs.css\";\r\n\r\nconst Songs = (props) => {\r\n  const { onChange, songs, onRoll } = props;\r\n\r\n  // update attribute from numerical input\r\n  const updateSong = (e) => {\r\n    e.preventDefault();\r\n    let val = e.target.value;\r\n    if (val) {\r\n      val = parseInt(val);\r\n    }\r\n    const song = e.target.id.replace(\"song-\", \"\");\r\n\r\n    const newState = { ...songs };\r\n    newState[song].played = val;\r\n    onChange(newState);\r\n  };\r\n\r\n  // roll dice on button click\r\n  const rollDice = (e) => {\r\n    e.preventDefault();\r\n    onRoll(\"1d20\", song);\r\n  };\r\n\r\n  return (\r\n    <div className=\"songs\">\r\n      <button\r\n        id=\"pick-song\"\r\n        className=\"button\"\r\n        aria-label=\"Pick Song\"\r\n        onClick={rollDice}\r\n      >\r\n        Pick Song\r\n      </button>\r\n      {Object.entries(songs).map(([key, values]) => {\r\n        return (\r\n          <div className=\"songs-group\" key={key}>\r\n            <div className=\"songs-name\">\r\n              <button\r\n                className=\"button button--secondary\"\r\n                id={`pick-${key}`}\r\n                onClick={updateSong}\r\n              >\r\n                {values.name}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Songs;\r\n","import \"./styles.css\";\nimport { useState } from \"react\";\nimport { dataSongs } from \"./data/songs\";\nimport { Dice } from \"./components/diceBox\";\nimport Songs from \"./components/Songs\";\n\n// initialize the Dice Box outside of the component\nDice.init().then(() => {\n  // clear dice on click anywhere on the screen\n  document.addEventListener(\"mousedown\", () => {\n    const diceBoxCanvas = document.getElementById(\"dice-canvas\");\n    if (window.getComputedStyle(diceBoxCanvas).display !== \"none\") {\n      Dice.hide().clear();\n    }\n  });\n});\n\nexport default function App() {\n  const [song, setSong] = useState(dataSongs);\n  const [pendingRoll, setPendingRoll] = useState();\n\n  // This method is triggered whenever dice are finished rolling\n  Dice.onRollComplete = (results) => {\n    console.log(results);\n\n    const newState = { ...song };\n\n    if (pendingRoll === \"all\") {\n      Object.keys(newState).forEach((song, i) => {\n        newState[song].played = results[i].value;\n      });\n    } else {\n      newState[pendingRoll].total = results[0].value;\n    }\n    setSong(newState);\n  };\n\n  // update attribute from numerical input\n  const updateSongs = (newState) => {\n    console.log(\"update the songs\");\n    setSong(newState);\n  };\n\n  // trigger dice roll\n  const rollDice = (notation, group) => {\n    // save which attribute we're rolling for\n    setPendingRoll(group);\n    // trigger the dice roll\n    Dice.show().roll(notation);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Logger Song Picker</h1>\n      <Songs\n        songs={song} // pass in attribute numbers from App state\n        onClick={rollDice} // pass down click function\n      />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}